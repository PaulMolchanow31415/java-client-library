ChatGPT, [03.04.2023 12:23]
Для того, чтобы разделить файлы FXML и контроллеры, вам нужно использовать
фабрику контроллеров в вашем главном файле FXML. Фабрика контроллеров может
создавать экземпляры контроллеров для каждого FXML-файла и связывать их друг с другом.

В вашем случае, вы можете создать один контроллер для вашего главного FXML-файла
и другой контроллер для вашего файла с поиском. Затем вы можете использовать фабрику
контроллеров в главном файле FXML для создания экземпляра контроллера поиска и связи его с контроллером таблицы.

Вот пример того, как это может быть сделано в коде:

Главный файл FXML:

```xml
<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.layout.AnchorPane?>
<?import javafx.scene.layout.BorderPane?>
<?import javafx.scene.control.TableColumn?>
<?import javafx.scene.control.TableView?>

<BorderPane fx:controller="com.example.MainController"
            xmlns:fx="http://javafx.com/fxml"
            prefWidth="400.0" prefHeight="300.0">
    <center>
        <TableView fx:id="tableView" prefWidth="200.0" prefHeight="200.0">
            <columns>
                <TableColumn fx:id="column1" text="Column 1"/>
                <TableColumn fx:id="column2" text="Column 2"/>
            </columns>
        </TableView>
    </center>
</BorderPane>
```

Контроллер главного файла FXML:

```java
package com.example;

import javafx.fxml.FXML;
import javafx.scene.control.TableView;
import javafx.scene.control.TableColumn;

public class MainController {
    @FXML private TableView<MyData> tableView;
    @FXML private TableColumn<MyData, String> column1;
    @FXML private TableColumn<MyData, String> column2;

    // метод для установки данных в таблицу
    public void setData(ObservableList<MyData> data) {
        tableView.setItems(data);
    }

    // метод для фильтрации таблицы поиска
    public void filterTable(String keyword) {
        // реализация фильтрации
    }
}
```

Файл FXML с полем поиска:

```xml
<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.layout.AnchorPane?>
<?import javafx.scene.control.TextField?>

<AnchorPane fx:controller="com.example.SearchController"
            xmlns:fx="http://javafx.com/fxml">
    <TextField fx:id="keywordField" onKeyReleased="#filterTable"/>
</AnchorPane>
```

Контроллер файла FXML с полем поиска:

```java
package com.example;

import javafx.fxml.FXML;
import javafx.scene.control.TextField;

public class SearchController {
    @FXML private TextField keywordField;

    // метод для связывания с контроллером таблицы
    public void setMainController(MainController mainController) {
        this.mainController = mainController;
    }

    @FXML
    private void filterTable() {
        String keyword = keywordField.getText();
        mainController.filterTable(keyword);
    }
}
```

Использование фабрики контроллеров в главном классе приложения:

```java
package com.example;

import javafx.application.Application;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.stage.Stage;

public class MyApp extends Application {
    @Override
    public void start(Stage primaryStage) throws Exception{
        FXMLLoader mainLoader = new FXMLLoader(getClass().getResource("main.fxml"));
        Parent root = mainLoader.load();
        MainController mainController = mainLoader.getController();

        FXMLLoader searchLoader = new FXMLLoader(getClass().getResource("search.fxml"));
        AnchorPane searchPane = searchLoader.load();
        SearchController searchController = searchLoader.getController();
        searchController.setMainController(mainController);

        BorderPane mainPane = (BorderPane) root;
        mainPane.setTop(searchPane);

        Scene scene = new Scene(root, 400, 300);
        primaryStage.setScene(scene);
        primaryStage.show();
    }

    public static void main(String[] args) {
        launch(args);
    }
}
```

В коде мы загружаем файл FXML главного окна и создаём экземпляр его контроллера. Затем мы загружаем
файл FXML с поиском, создаём экземпляр его контроллера и связываем его с контроллером

ChatGPT, [03.04.2023 12:23]
главного окна. Наконец, мы добавляем поле поиска в верхнюю часть главного окна, используя
фабрику контроллеров и BorderPane.